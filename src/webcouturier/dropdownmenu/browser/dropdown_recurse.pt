<tal:master define="level options/level|python:0;
                    children options/children | nothing;
                    normalizeString nocall: context/plone_utils/normalizeString;"
            i18n:domain="plone">

<metal:main
    define-macro="nav_main"
    tal:define="utils python:modules['webcouturier.dropdownmenu.utils'];
                enable_parent_clickable view/enable_parent_clickable|utils/parentClickable;
                enable_thumbs view/enable_thumbs|utils/enableThumbs;
                enable_desc view/enable_desc|utils/enableDesc">
<tal:navitem repeat="node children">
<tal:li define="show_children   node/show_children;
                children        node/children;
                item_url        node/getURL;
                item_remote_url node/getRemoteUrl;
                use_remote_url  node/useRemoteUrl | nothing;
                start           repeat/node/start;
                level           node/level;
                last            node/last;
                q               python: chr(34);
                li              python: '<li class={}dropdown-submenu{}>'.format(q, q) if children else '<li>'">

    <tal:delim condition="python: level > last"
               replace="structure python:'<ul class={}submenu dropdown-menu navTree navTreeLevel{}{}> {}'.format(q, level, q, li)" />

    <tal:delim repeat="_ python: range(last - level)"
               replace="structure python:'</li> </ul>'" />

    <tal:delim condition="python: level <= last and not start"
               replace="structure python:'</li> {}'.format(li)" />

    <tal:level define="has_children nocall:children;
                       children_class python:has_children and ' hasDropDown' or '';
                       item_class string:state-${node/normalized_review_state}${children_class};
                       item_clickable python:enable_parent_clickable or not has_children;">

        <a tal:attributes="href python:use_remote_url and item_remote_url or item_url;
                           title node/Description;
                           class python:item_clickable and item_class or item_class + ' noClick'">

            <span tal:content="node/Title" class="submenu_title">Selected Item Title</span>
            <tal:thumbnail condition="python: enable_thumbs != 'none'">
            <img src="" alt="" class="subnmenu_image"
                 tal:define="obj node/item/getObject;
                             has_icon exists:python:obj.getImage().icon"
                 tal:attributes="src string:${obj.absolute_url}/image_${enable_thumbs}"
                 tal:condition="python: has_icon" />
            </tal:thumbnail>

            <span tal:content="node/Description" class="submenu_description"
                  tal:condition="enable_desc">Selected Item Description</span>
        </a>
    </tal:level>

    <tal:end condition="repeat/node/end">
        <tal:delim repeat="_ python: range(level)"
                   replace="structure python:'</li> </ul>'" />
    </tal:end>

</tal:li>
</tal:navitem>
</metal:main>
</tal:master>
